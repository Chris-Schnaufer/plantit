name: RC
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - name: Slack start notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: plantit-dev
          SLACK_ICON: https://raw.githubusercontent.com/Computational-Plant-Science/plantit/master/plantit/front_end/src/assets/logo-favicon.png
          SLACK_MESSAGE: 'Building RC'
          SLACK_TITLE: PlantIT CI
          SLACK_USERNAME: plantit
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create SSH key  # adapted from https://stackoverflow.com/a/60479844/6514033
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.RC_SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.RC_SSH_KNOWN_HOSTS}}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
      - name: Bootstrap, build, & test
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          CYVERSE_USERNAME: ${{ secrets.CYVERSE_USERNAME }}
          CYVERSE_PASSWORD: ${{ secrets.CYVERSE_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_SECRET: ${{ secrets.GITHUB_SECRET }}
          CYVERSE_CLIENT_ID: ${{ secrets.CYVERSE_CLIENT_ID }}
          CYVERSE_CLIENT_SECRET: ${{ secrets.CYVERSE_CLIENT_SECRET }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        run: |
          chmod +x scripts/bootstrap.sh
          bash scripts/bootstrap.sh -n
          docker-compose -f docker-compose.dev.yml exec -T -e COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN plantit coverage run --source='.' ./manage.py test
          docker-compose -f docker-compose.dev.yml exec -T -e COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN plantit coveralls
          docker push computationalplantscience/plantit
      - name: Deploy release candidate
        env:
          HOST: ${{ secrets.RC_HOST }}
          SSH_HOST: ${{ secrets.RC_SSH_HOST }}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          PORT: ${{ secrets.RC_PORT }}
          USER: ${{ secrets.RC_USER }}
          DIRECTORY: ${{ secrets.RC_DIRECTORY }}
          EMAIL: ${{ secrets.RC_EMAIL }}
          CONFIG: rc
        run: |
          chmod +x scripts/deploy.sh
          # chmod +x scripts/deploy-ssh.sh
          # bash scripts/deploy-ssh.sh

          eval "$(ssh-agent -s)" # Start ssh-agent cache
          chmod 600 $SSH_KEY_PATH # Allow read access to the private key
          ssh-add $SSH_KEY_PATH # Add the private key to SSH

          echo "Deploying $CONFIG"
          ssh -v -o StrictHostKeyChecking=no -p $PORT -i $SSH_KEY_PATH "$USER@$SSH_HOST" <<EOF
            cd $DIRECTORY
            chmod +x scripts/deploy.sh
            scripts/deploy.sh $CONFIG $HOST $EMAIL
          EOF
      - name: Slack success notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: plantit-dev
          SLACK_ICON: https://raw.githubusercontent.com/Computational-Plant-Science/plantit/master/plantit/front_end/src/assets/logo-favicon.png
          SLACK_MESSAGE: 'RC build succeeded'
          SLACK_TITLE: PlantIT CI
          SLACK_USERNAME: plantit