version: '3.7'
services:
  plantit:
    image: computationalplantscience/plantit
    working_dir: /code/plantit
    volumes:
      - .:/code
    environment:
      - VUE_APP_TITLE=${VUE_APP_TITLE}
      - CYVERSE_REDIRECT_URL=${CYVERSE_REDIRECT_URL}
      - CYVERSE_CLIENT_ID=${CYVERSE_CLIENT_ID}
      - CYVERSE_CLIENT_SECRET=${CYVERSE_CLIENT_SECRET}
      - CYVERSE_USERNAME=${CYVERSE_USERNAME}
      - CYVERSE_PASSWORD=${CYVERSE_PASSWORD}
      - NODE_ENV=${NODE_ENV}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_FIELD_ENCRYPTION_KEY=${DJANGO_FIELD_ENCRYPTION_KEY}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_ADMIN_USERNAME=${DJANGO_ADMIN_USERNAME}
      - DJANGO_ADMIN_PASSWORD=${DJANGO_ADMIN_PASSWORD}
      - DJANGO_SECURE_SSL_REDIRECT=${DJANGO_SECURE_SSL_REDIRECT}
      - DJANGO_SESSION_COOKIE_SECURE=${DJANGO_SESSION_COOKIE_SECURE}
      - DJANGO_CSRF_COOKIE_SECURE=${DJANGO_CSRF_COOKIE_SECURE}
      - USERS_CACHE=${USERS_CACHE}
      - USERS_REFRESH_MINUTES=${USERS_REFRESH_MINUTES}
      - USERS_STATS_REFRESH_MINUTES=${USERS_STATS_REFRESH_MINUTES}
      - AGENT_KEYS=${AGENT_KEYS}
      - WORKFLOWS_CACHE=${WORKFLOWS_CACHE}
      - WORKFLOWS_REFRESH_MINUTES=${WORKFLOWS_REFRESH_MINUTES}
      - MORE_USERS=${MORE_USERS}
      - SESSIONS_LOGS=${SESSIONS_LOGS}
      - RUNS_TIMEOUT_MULTIPLIER=${RUNS_TIMEOUT_MULTIPLIER}
      - RUNS_LOGS=${RUNS_LOGS}
      - RUNS_REFRESH_SECONDS=${RUNS_REFRESH_SECONDS}
      - RUNS_CLEANUP_MINUTES=${RUNS_CLEANUP_MINUTES}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - SQL_DB=${SQL_DB}
      - GITHUB_AUTH_URI=${GITHUB_AUTH_URI}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_USERNAME=${GITHUB_USERNAME}
      - GITHUB_KEY=${GITHUB_KEY}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - DOCKER_PASSWORD=${DOCKER_PASSWORD}
      - NO_PREVIEW_THUMBNAIL=${NO_PREVIEW_THUMBNAIL}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
    command: ["/code/scripts/wait-for-postgres.sh", "postgres", "python", "manage.py", "runserver", "0.0.0.0:3000"]
    depends_on:
      - postgres
      - celery
      - sandbox
    ports:
      - "3000:3000"
    healthcheck:
      test: curl -f http://localhost:3000/ping/
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s
  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_HOST=${SQL_HOST}
      - POSTGRES_PORT=${SQL_PORT}
      - POSTGRES_NAME=${SQL_NAME}
      - POSTGRES_DB=${SQL_NAME}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    healthcheck:
      test: /usr/bin/pg_isready -U "postgres"
      interval: 60s
      timeout: 60s
      retries: 2
      start_period: 20s
  redis:
    image: redis:6
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli PING
      interval: 60s
      timeout: 60s
      retries: 2
      start_period: 20s
    command: ["redis-server", "--appendonly", "yes"]
  celery:
    image: computationalplantscience/plantit
    command: ["/code/scripts/wait-for-postgres.sh", "postgres", "celery", "-A", "plantit", "worker", "-B", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler", "--loglevel=INFO", "-Ofair"]
    volumes:
      - .:/code
    working_dir: /code/plantit
    depends_on:
      - postgres
      - redis
    environment:
      - CYVERSE_REDIRECT_URL=${CYVERSE_REDIRECT_URL}
      - CYVERSE_CLIENT_ID=${CYVERSE_CLIENT_ID}
      - CYVERSE_CLIENT_SECRET=${CYVERSE_CLIENT_SECRET}
      - CYVERSE_USERNAME=${CYVERSE_USERNAME}
      - CYVERSE_PASSWORD=${CYVERSE_PASSWORD}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_FIELD_ENCRYPTION_KEY=${DJANGO_FIELD_ENCRYPTION_KEY}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SECURE_SSL_REDIRECT=${DJANGO_SECURE_SSL_REDIRECT}
      - DJANGO_SESSION_COOKIE_SECURE=${DJANGO_SESSION_COOKIE_SECURE}
      - DJANGO_CSRF_COOKIE_SECURE=${DJANGO_CSRF_COOKIE_SECURE}
      - CELERY_TEMPLATE_LOCAL_RUN_SCRIPT=${CELERY_TEMPLATE_LOCAL_RUN_SCRIPT}
      - CELERY_TEMPLATE_SLURM_RUN_SCRIPT=${CELERY_TEMPLATE_SLURM_RUN_SCRIPT}
      - USERS_CACHE=${USERS_CACHE}
      - USERS_REFRESH_MINUTES=${USERS_REFRESH_MINUTES}
      - USERS_STATS_REFRESH_MINUTES=${USERS_STATS_REFRESH_MINUTES}
      - MORE_USERS=${MORE_USERS}
      - AGENT_KEYS=${AGENT_KEYS}
      - WORKFLOWS_CACHE=${WORKFLOWS_CACHE}
      - WORKFLOWS_REFRESH_MINUTES=${WORKFLOWS_REFRESH_MINUTES}
      - SESSIONS_LOGS=${SESSIONS_LOGS}
      - RUNS_TIMEOUT_MULTIPLIER=${RUNS_TIMEOUT_MULTIPLIER}
      - RUNS_LOGS=${RUNS_LOGS}
      - RUNS_REFRESH_SECONDS=${RUNS_REFRESH_SECONDS}
      - RUNS_CLEANUP_MINUTES=${RUNS_CLEANUP_MINUTES}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - SQL_DB=${SQL_DB}
      - GITHUB_AUTH_URI=${GITHUB_AUTH_URI}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI}
      - GITHUB_USERNAME=${GITHUB_USERNAME}
      - GITHUB_KEY=${GITHUB_KEY}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - DOCKER_PASSWORD=${DOCKER_PASSWORD}
      - NO_PREVIEW_THUMBNAIL=${NO_PREVIEW_THUMBNAIL}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
    healthcheck:
      test: celery -A plantit status | grep "OK"
      interval: 60s
      timeout: 60s
      retries: 2
      start_period: 20s
  sandbox:
    image: computationalplantscience/plantit-sandbox
    command: ["/usr/sbin/sshd", "-D"]
    working_dir: /opt/plantit-cli
    privileged: true
