# Base docker-compose file.
#
# Usage:
#   Development:
#     docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
#
#   Production:
#     docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.7'

services:

  plantit:
    build:
      context: ./dev
      dockerfile: dockerfiles/plantit/Dockerfile
    working_dir: /code/plantit
    depends_on:
      - postgres
      - celery
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_FIELD_ENCRYPTION_KEY=${DJANGO_FIELD_ENCRYPTION_KEY}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - SQL_NAME=${SQL_NAME}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_HOST=${SQL_HOST}
      - POSTGRES_PORT=${SQL_PORT}
      - POSTGRES_NAME=${SQL_NAME}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    healthcheck:
      test: /usr/bin/pg_isready -U "postgres"
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    healthcheck:
      test: curl -f http://localhost:8080/
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  rabbitmq:
    image: rabbitmq:3.7.6-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: python -c "import urllib2; print urllib2.urlopen('http://localhost:15672').getcode();" | grep "200"
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  celery:
    build:
      context: ./dev
      dockerfile: dockerfiles/plantit/Dockerfile
    command: ["celery", "-A", "plantit", "worker", "--loglevel=info"]
    volumes:
      - .:/code
    working_dir: /code/plantit
    depends_on:
      - rabbitmq
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_FIELD_ENCRYPTION_KEY=${DJANGO_FIELD_ENCRYPTION_KEY}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=*
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - SQL_NAME=${SQL_NAME}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
    healthcheck:
      test: celery -A plantit status | grep "OK"
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  #dagster-celery:
  #  build:
  #    context: ./dev
  #    dockerfile: dockerfiles/plantit/Dockerfile
  #  command: ["dagster-celery", "worker", "start", "-n", "plantit-dagster", "-y", "/code/plantit/celery_config.yaml"]
  #  volumes:
  #    - .:/code
  #  working_dir: /code/plantit
  #  depends_on:
  #    - rabbitmq
  #  environment:
  #    - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
  #    - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
  #    - DJANGO_DEBUG=${DJANGO_DEBUG}
  #    - DJANGO_FIELD_ENCRYPTION_KEY=${DJANGO_FIELD_ENCRYPTION_KEY}
  #    - DJANGO_API_URL=${DJANGO_API_URL}
  #    - DJANGO_ALLOWED_HOSTS=*
  #    - SQL_ENGINE=${SQL_ENGINE}
  #    - SQL_HOST=${SQL_HOST}
  #    - SQL_PORT=${SQL_PORT}
  #    - SQL_NAME=${SQL_NAME}
  #    - SQL_USER=${SQL_USER}
  #    - SQL_PASSWORD=${SQL_PASSWORD}
  #    - DAGSTER_HOME=${DAGSTER_HOME}
  #  healthcheck:
  #    test: dagster-celery worker list -y /code/plantit/celery_config.yaml | grep "plantit-dagster"
  #    interval: 20s
  #    timeout: 20s
  #    retries: 2
  #    start_period: 20s

  #dagit:
  #  build:
  #    context: ./dev
  #    dockerfile: dockerfiles/plantit/Dockerfile
  #  command: ["/code/dev/start-dagit.sh"]
  #  environment:
  #    - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
  #    - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
  #    - DJANGO_DEBUG=${DJANGO_DEBUG}
  #    - DJANGO_FIELD_ENCRYPTION_KEY=${DJANGO_FIELD_ENCRYPTION_KEY}
  #    - DJANGO_API_URL=${DJANGO_API_URL}
  #    - DJANGO_ALLOWED_HOSTS=*
  #    - SQL_ENGINE=${SQL_ENGINE}
  #    - SQL_HOST=${SQL_HOST}
  #    - SQL_PORT=${SQL_PORT}
  #    - SQL_NAME=${SQL_NAME}
  #    - SQL_USER=${SQL_USER}
  #    - SQL_PASSWORD=${SQL_PASSWORD}
  #    - DAGSTER_HOME=${DAGSTER_HOME}
  #  volumes:
  #    - .:/code
  #  ports:
  #  - "3000:3000"
  #  healthcheck:
  #    test: curl -f http://localhost:3000/dagit_info/
  #    interval: 20s
  #    timeout: 20s
  #    retries: 2
  #    start_period: 20s

  flower:
    image: mher/flower
    volumes:
      - .:/code
    depends_on:
      - celery
    command: flower --broker=amqp://rabbitmq --port=5555
    ports:
      - 5555:5555
    healthcheck:
      test: python -c "import urllib.request; print(urllib.request.urlopen('http://localhost:5555').getcode());" | grep "200"
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s