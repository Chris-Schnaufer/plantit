# Base docker-compose file.
#
# Usage:
#  For Developer mode:
#    docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
#
#  For Production mode:
#    docker-compose -f docker-compose.yml -f docker-compose.production.yml up
#
version: '3.7'

services:

  djangoapp:
    build:
      context: ./dev
      dockerfile: ./dockerfiles/djangoapp/Dockerfile
    working_dir: /code/django
    depends_on:
      - postgres
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=plantit.settings
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_FIELD_ENCRYPTION_KEY=${DJANGO_FIELD_ENCRYPTION_KEY}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: /usr/bin/pg_isready -U ${POSTGRES_USER}
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  rabbitmq:
    image: rabbitmq:3.7.6-management
    hostname: rabbitmq

  celery:
    build:
      context: ./dev
      dockerfile: ./dockerfiles/djangoapp/Dockerfile
    volumes:
      - .:/code
    working_dir: /code/django
    depends_on:
      - rabbitmq
    command: celery -A plantit worker --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=plantit.settings
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_FIELD_ENCRYPTION_KEY=${DJANGO_FIELD_ENCRYPTION_KEY}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=*
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

