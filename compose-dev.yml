# Runs `plantit` in developer mode.
#
# Django's `manage.py runserver` hosts `plantit` at `localhost:80`.
#
# Also provides:
#   irods: mock IRODS server object store
#   adminer:  database admin UI
#   ssh: mock cluster
#   flower: celery admin UI
#
# See docker-compose.yml for usage.
version: '3.7'

services:

  express:
    image: mongo-express:0.54
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
    ports:
      - 8081:8081
    networks:
      - default
    depends_on:
      - mongo
    healthcheck:
      test: curl -f http://localhost:8081/
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  djangoapp:
    command: python3 manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    healthcheck:
      test: curl -f http://localhost:8000/
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    healthcheck:
      test: curl -f http://localhost:8080/
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  ssh:
    build: ./dev/dockerfiles/test_cluster
    privileged: true
    depends_on:
      - irods

  irods:
    image: mjstealey/irods-provider-postgres:4.2.3
    ports:
      - "1247:1247"

