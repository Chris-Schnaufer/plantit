# Runs PlantIT in devloper mode
#
# Uses django's `manage.py runserver` to host PlantIT locally on port 80
# instead of booting up ngnix and gunicorn
#
# Also provides:
#
# irods:
#    A test irods server
#
# adminer:
#    A database admin interface
#
# ssh:
#   A "test cluster" for submitting workflow jobs to
#
# See docker-compose.yml for usage.
version: '3.7'

services:
  djangoapp:
    command: python3 manage.py runserver 0.0.0.0:80
    environment:
      - DJANGO_SETTINGS_MODULE=plantit.settings_dev
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "80:80"
    depends_on:
      - db-dev

  celery:
    environment:
      - DJANGO_SETTINGS_MODULE=plantit.settings_dev

  db-dev:
    image: postgres
    hostname: db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: /usr/bin/pg_isready -U ${POSTGRES_USER}
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      - db-dev

  ssh:
    build: ./dev/dockerfiles/test_cluster
    privileged: true
    depends_on:
      - irods

  irods:
    image: mjstealey/irods-provider-postgres:4.2.3
    ports:
      - "1247:1247"

