# Runs `plantit` in developer mode.
#
# Django's `manage.py runserver` hosts `plantit` at `localhost:80`.
#
# Also provides:
#   irods: mock IRODS server object store
#   adminer:  database admin UI
#   ssh: mock cluster
#   flower: celery admin UI
#
# See docker-compose.yml for usage.
version: '3.7'

services:

  djangoapp:
    command: python3 manage.py runserver 0.0.0.0:80
    environment:
      - DJANGO_SETTINGS_MODULE=plantit.settings_dev
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "80:80"
    depends_on:
      - db-dev
    healthcheck:
      test: curl -f http://localhost:80/
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  celery:
    environment:
      - DJANGO_SETTINGS_MODULE=plantit.settings_dev
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  db-dev:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: /usr/bin/pg_isready -U ${POSTGRES_USER}
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      - db-dev

  ssh:
    build: ./dev/dockerfiles/test_cluster
    privileged: true
    depends_on:
      - irods

  irods:
    image: mjstealey/irods-provider-postgres:4.2.3
    ports:
      - "1247:1247"